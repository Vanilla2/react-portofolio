{"version":3,"sources":["img/8.jpg","img/9.jpg","img/1.webp","img/2.webp","img/3.webp","img/4.webp","img/5.webp","img/6.webp","img/7.webp","components/present.js","components/underline.js","components/line.js","components/lines.js","components/about.js","components/project.js","components/projects.js","components/contact.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Present","className","href","onClick","document","querySelector","scrollIntoView","behavior","Underline","props","Line","name","style","width","percentage","height","s","skills1","skills2","About","x1","map","x","offset","x2","useState","Project","open","setOpen","handleClose","used","src","img1","alt","image","img2","Modal","dialogClassName","centered","show","onHide","Header","closeButton","Title","Body","desc","Footer","Button","variant","Projects","android","p1","p2","p3","p4","p5","p6","p7","p8","p9","Contact","state","setState","Index","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8c349ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/8.32c7e953.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.e10c32ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.63c1b67d.webp\";","module.exports = __webpack_public_path__ + \"static/media/2.ad61ae7e.webp\";","module.exports = __webpack_public_path__ + \"static/media/3.3aacdc6f.webp\";","module.exports = __webpack_public_path__ + \"static/media/4.84637f6c.webp\";","module.exports = __webpack_public_path__ + \"static/media/5.17d838be.webp\";","module.exports = __webpack_public_path__ + \"static/media/6.0788fca6.webp\";","module.exports = __webpack_public_path__ + \"static/media/7.2fba5c60.webp\";","import React from 'react';\r\nfunction Present(){\r\n    function changeView(){\r\n        let element = document.querySelector(\".about-box\");\r\n        element.scrollIntoView({behavior: \"smooth\"});\r\n    }\r\n    return(\r\n        <div className = \"present-box\">\r\n            <a href = \"https://dev-vanilla.com\" className = \"dev\">Developed By Vanilla</a>\r\n            <span className = \"present-box-first\">\r\n                <p className = \"present-text\">\r\n                    Hello, I'm\r\n                </p>\r\n                <p className = \"invisible\"> /</p>\r\n                <p className = \"present-text highlight\">\r\n                    Soltan Gheoghe\r\n                </p>\r\n                <p className = \"present-text\">\r\n                    .\r\n                </p>\r\n            </span>\r\n            <p className = \"present-text margin\">\r\n                I'm a software developer.\r\n            </p>\r\n            <button onClick = {changeView} className = \"scroll-btn present-text-last\">\r\n                View my work\r\n                <i className = \"arrow fas fa-arrow-right\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\nexport default Present;","import React from 'react';\r\n\r\nfunction Underline(props){\r\n    let id = \"underline\";\r\n    return(\r\n        <div className = \"underline\"></div>\r\n    )\r\n}\r\nexport default Underline;","import React, {useState} from 'react';\r\n\r\nfunction Line(props){\r\n    return(\r\n        <div className = \"line-box\">\r\n            <div className = \"line-name-box\">\r\n                <p className = \"line-name-text\">{props.name}</p>\r\n            </div>\r\n            <div className = \"line-fill-box\">\r\n                <div className = \"line-fill\" style={{\r\n                    width: `${props.percentage}%`,\r\n                    height:`25px`\r\n                }}>\r\n                </div>\r\n                <p className = \"percentage-text\">\r\n                    {props.percentage}%\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Line;","\r\nconst skills1 = [\r\n    { \r\n        percentage:80, \r\n        name:\"C\"\r\n    },\r\n    { \r\n        percentage:65, \r\n        name:\"C++\"\r\n    },  \r\n    { \r\n        percentage:60, \r\n        name:\"Swift\"\r\n    },  \r\n    { \r\n        percentage:60, \r\n        name:\"Java\"\r\n    },            \r\n    { \r\n        percentage:80, \r\n        name:\"Kotlin\"\r\n    },  \r\n    { \r\n        percentage:50, \r\n        name:\"Javascript\"\r\n    },  \r\n    { \r\n        percentage:80, \r\n        name:\"JetBrains\"\r\n    }\r\n]\r\nconst skills2 = [\r\n    { \r\n        percentage:40, \r\n        name:\"SQL\"\r\n    },\r\n    { \r\n        percentage:70,\r\n        name:\"Python\"\r\n    },\r\n    { \r\n        percentage:60,\r\n        name:\"Android\"\r\n    },\r\n    { \r\n        percentage:50,\r\n        name:\"iOS\"\r\n    },\r\n    { \r\n        percentage:40,\r\n        name:\"Node JS\"\r\n    },\r\n    { \r\n        percentage:60,\r\n        name:\"Jira\"\r\n    },\r\n    { \r\n        percentage:80,\r\n        name:\"VScode\"\r\n    }\r\n]\r\nlet s = {\r\n    skills1: skills1,\r\n    skills2: skills2\r\n}\r\nexport default s;","import React, { useState } from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport Underline from './underline';\r\nimport Line from './line';\r\nimport s from './lines';\r\n\r\nfunction About(){\r\n    let x1 = s.skills1.map(x =>(\r\n        <LazyLoad offset = {[0,250]}>\r\n            <Line \r\n            percentage = {x.percentage} \r\n            name = {x.name}\r\n            />  \r\n        </LazyLoad>\r\n    ))\r\n    let x2 = s.skills2.map(x =>(\r\n        <LazyLoad offset = {[0,250]}>\r\n            <Line \r\n            percentage = {x.percentage} \r\n            name = {x.name}\r\n            />  \r\n        </LazyLoad>\r\n    ))\r\n    function handleSpecial(){\r\n        let target = document.querySelector(\".about-box\");\r\n        target.scrollIntoView({behavior: \"smooth\"});\r\n    }\r\n    const [state,setState] = useState(0);\r\n    return(\r\n        <div className = \"about-box\">\r\n            <LazyLoad offset = {[0,250]}>\r\n                <div className = \"about-text-box\">\r\n                    <p className = \"about\">About</p>\r\n                    <Underline />\r\n                </div>\r\n            </LazyLoad>\r\n            <div className = \"who-box\">\r\n                <LazyLoad offset = {[0,250]}>\r\n                    <p className = \"who-text who-text-title\">\r\n                        Who Am I?\r\n                    </p>\r\n                </LazyLoad>\r\n                {/* <img className = \"avatar\" src = 'https://avatars0.githubusercontent.com/u/29017749?s=460&u=1c8bbb219e9da4c04c0a4138cbf120fa1cd83044&v=4' alt = \"Not found\"/> */}\r\n                <LazyLoad offset = {[0,250]}>\r\n                    <div className = \"who-text-box\">\r\n                        <p className = \"who-text who-text-1\">\r\n                        I'm a Software-Developer for <a className = \"link\" href = \"https://7sab.com\">7sab.com</a> in Bucharest, Romania.\r\n                        I have serious passion for UI effects, animations and creating intuitive, dynamic user experiences.{\" \"}\r\n                        <s onClick = {handleSpecial} className = \"link-1\">Let's make something special</s>.\r\n                        </p>\r\n                    </div>\r\n                </LazyLoad>\r\n            </div>\r\n            <div className = \"exp-box\">\r\n                <LazyLoad offset = {[0,250]}>\r\n                    <p className = \"exp-name\">Work Experience</p>\r\n                </LazyLoad>\r\n                <LazyLoad offset = {[0,250]}>\r\n                    <p className = \"exp-text\">\r\n                        Worked at 7sab for 14 years and i have no life lol :)\r\n                    </p>\r\n                </LazyLoad>\r\n            </div>\r\n            <LazyLoad offset = {[0,250]}>\r\n                <div className = \"skill-box\">\r\n                    <p className = \"skill-text\">\r\n                        These are my skills:\r\n                    </p>\r\n                </div>\r\n            </LazyLoad>\r\n            <div className = \"skills\">\r\n                <div className = \"skill-box-1\">\r\n                    {x1}\r\n                </div>\r\n                <div className = \"skill-box-2\">\r\n                    {x2}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport LazyLoad from 'react-lazyload';\r\n// import Button from '@material-ui/core/Button';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nfunction Project(props){\r\n    const [open,setOpen] = useState(false);\r\n    const handleIos = () => {\r\n        window.location = props.ios;\r\n    }\r\n    const handleAndroid = () => {\r\n        window.location = props.android;\r\n    }\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    return(\r\n        <div className = \"project\">\r\n            <LazyLoad offset = {[0,250]}>\r\n                <div className = \"project-name-box\">\r\n                    <p className = \"project-name\">\r\n                        {props.name}\r\n                    </p>\r\n                </div>\r\n            </LazyLoad>\r\n            <LazyLoad offset = {[0,250]}>\r\n                <div className = \"project-used-box\">\r\n                    <p className = \"project-used\">\r\n                        {props.used}\r\n                    </p>\r\n                </div>                                      \r\n            </LazyLoad>\r\n            <div onClick = {handleClickOpen} className = \"img-box\">\r\n                <img className = \"img\" src = {props.img1} alt = \"Not found\"/>\r\n                {props.image ? <img className = \"img\" src = {props.img2} alt = \"Not found\"/> : <div></div>}\r\n            </div>\r\n            <Modal \r\n            dialogClassName=\"modal-custom\"\r\n            centered\r\n            show={open}\r\n            onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className = \"m-body\">\r\n                        <div className = \"m-img-box\">\r\n                            <img className = \"m-img\"src = {props.img1} alt =\"Not Found\"/>\r\n                            {props.image? <img className = \"m-img\" src = {props.img2} alt = \"Not Found\"/> : <div></div>}\r\n                        </div>\r\n                        <div className = \"m-content\">\r\n                            <h4 className = \"m-name\">\r\n                                {props.name}\r\n                            </h4>\r\n                            <h5 className = \"m-used\">\r\n                                {props.used}\r\n                            </h5>\r\n                            <p className = \"m-text\">\r\n                                {props.desc}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}  \r\nexport default Project;","import React from 'react';\r\nimport Underline from './underline';\r\nimport Project from './project';\r\nimport p1 from \"../img/1.webp\";\r\nimport p2 from \"../img/2.webp\";\r\nimport p3 from \"../img/3.webp\";\r\nimport p4 from \"../img/4.webp\";\r\nimport p5 from \"../img/5.webp\";\r\nimport p6 from \"../img/6.webp\";\r\nimport p7 from \"../img/7.webp\";\r\nimport p8 from \"../img/8.jpg\";\r\nimport p9 from \"../img/9.jpg\";\r\n\r\nfunction Projects(){\r\n\r\n    return(\r\n        <div className = \"project-box\">\r\n            <div className = \"project-text-box\">\r\n                <p className = \"project-text\">Projects</p>\r\n                <Underline/>\r\n            </div>\r\n            <div className = \"project-box-2\">\r\n                <Project \r\n                desc = {\"Made using love, in 2 months deadline\"} \r\n                android = {\"https://play.google.com/store/apps/details?id=com.skyit.dictionary&hl=en\"} \r\n                used = {\"iOS / Swift & Android / Kotlin & Firebase\"} \r\n                name = {\"Kalimaty Dictionary\"} \r\n                img1 = {p1} \r\n                img2 = {p2}\r\n                image = {1}\r\n                />\r\n                <Project \r\n                desc = {\"\"} \r\n                android = {\"https://play.google.com/store/apps/details?id=thinkit.qpay.hesab&hl=en\"} \r\n                used = {\"iOS / Swift & Android / Kotlin & Firebase\"} \r\n                name = {\"7sab\"} \r\n                img1 = {p3} \r\n                image = {1} \r\n                img2 = {p4}\r\n                />\r\n                <Project \r\n                desc = {\"\"} \r\n                android = {\"https://play.google.com/store/apps/details?id=thinkit.aswaq&hl=en\"} \r\n                used = {\"iOS / Swift & Android / Kotlin & Firebase\"} \r\n                name = {\"Aswaq\"} \r\n                img1 = {p5} \r\n                image = {0} \r\n                img2 = {\"\"}\r\n                />\r\n                <Project \r\n                desc = {\"\"} \r\n                android = {\"https://play.google.com/store/apps/details?id=com.wcreations.trainingrooms&hl=en\"} \r\n                image = {1} used = {\"iOS / Swift & Android / Kotlin & Firebase\"} \r\n                name = {\"QatarCare EDU\"} \r\n                img1 = {p6} \r\n                img2 = {p7}\r\n                />\r\n                <Project \r\n                desc = {\"\"} \r\n                android = {\"\"} \r\n                image = {1} \r\n                used = {\"iOS / Swift & Android / Kotlin & Firebase\"} \r\n                name = {\"Helfy\"} \r\n                img2 = {p8} \r\n                img1 = {p9}\r\n                />\r\n                <Project \r\n                desc = {\"\"} \r\n                android = {\"\"} \r\n                image = {1} \r\n                used = {\"Android / Kotlin & Firebase\"} \r\n                name = {\"Staff Manager\"} \r\n                img2 = {p9} \r\n                img1 = {p8}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React, { useState } from 'react'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nfunction Contact(){\r\n    const [state, setState] = useState(0);\r\n    const handleSpecial = () =>{\r\n        setState(!state);\r\n    }\r\n    return(\r\n        <div className = \"contact-box\">\r\n            <p className = \"contact-text\">\r\n                Contact:\r\n            </p>\r\n                <div className = \"contact-icon-box\">\r\n                    <a href = \"https://linkedin.com/in/soltan-gheorghe-060541146\" className = \"contact-link\">\r\n                        <img className = \"contact-icon\" src = \"https://www.mavitecgreenenergy.com/wordpress/wp-content/uploads/2016/04/Linkedin-Icon-1024x1024.png\"/>\r\n                    </a>\r\n                    <a href = \"https://stackoverflow.com/users/10213096/cyber-gh\" className = \"contact-link\">\r\n                        <img className = \"contact-icon\" src = \"https://iconsetc.com/icons-watermarks/flat-square-white-on-black/bfa/bfa_brands-github-square/bfa_brands-github-square_flat-square-white-on-black_512x512.png\" />\r\n                    </a>\r\n                    <a href = \"https://github.com/cyber-gh\" className = \"contact-link\">\r\n                        <img className = \"contact-icon\" src = \"https://cdn3.iconfinder.com/data/icons/inficons/512/stackoverflow.png\" />\r\n                    </a>\r\n                    <a onClick = {handleSpecial} href = \"mail: soltangh.work@gmail.com\" className = \"contact-link\">\r\n                        {state ? <h2 className = \"gmail\">soltangh.work@gmail.com</h2>: <img className = \"contact-icon sp2\" src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Gmail_Icon.svg/1200px-Gmail_Icon.svg.png\" />}\r\n                    </a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport Present from './present';\r\nimport About from './about';\r\nimport Projects from './projects';\r\nimport Contact from './contact';\r\n\r\nfunction Index() {\r\n    return (\r\n        <div>\r\n            <Present/>\r\n            <About/>\r\n            <Projects/>\r\n            <Contact/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\nimport Index from './components/index'\nimport \"./style.css\";\nimport \"./canvas.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nfunction App() {\n  return (\n    <Index/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}